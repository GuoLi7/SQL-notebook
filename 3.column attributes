-- inserting a row 插入单行
INSERT INTO customers
VALUES ( DEFAULT, "Grace", "Lee", "2000-7-18", NULL, "address", "city" ,"UK", 8888);

-- -- inserting multiple row 插入多行
INSERT INTO products (name,quantity_in_stock,unit_price)
VALUES('Shipper1', 10, 1.95),
      ('Shipper2', 10, 1.95),
	  ('Shipper3', 10, 1.95);
      
-- inserting hierarchical rows插入分层行 在多张表中插入数据
INSERT INTO orders (customer_id,order_date,status )
VALUES (1,'2020-01-02', 1);

INSERT INTO order_items
VALUES (LAST_INSERT_ID(),1,1,2.5),
	   (LAST_INSERT_ID(),2,1,2.5);
       
-- creating a copy of a table 复制表内容建新表
-- CREATE TABLE orders_archived AS
-- SELECT * FROM orders
SELECT *
FROM orders
WHERE order_date <'2019-01-01';

CREATE TABLE invoices_archived AS
SELECT
    i.invoice_id,
    i.number,
    c.name AS client,
	i.invoice_total,
    i.payment_total,
    i.invoice_date,
    i.due_date,
    i.payment_date
FROM invoices i
JOIN  clients c
   USING (client_id)
WHERE  payment_date IS NOT null

-- update a single row 更新单行
UPDATE invoices
SET
   payment_total= invoice_total*0.5,
   payment_date= due_date
WHERE  invoice_id=3;

-- update multiple rows 更新多行 给所有1990年之前的顾客增加500积分
UPDATE customers
SET points= points+500
WHERE   birth_date <'1990-01-01';

-- using subquery in update 在update中使用子查询 
-- 给用户名为Myworks的用户更新订单的付款进程
-- 先用name搜查id号码 再通过id查到payment total 和date 更新
UPDATE invoices
SET
   payment_total= invoice_total*0.5,
   payment_date= due_date
WHERE  client_id=
           (SELECT client_id
            FROM clients
            WHERE name='Myworks');
            
UPDATE invoices
SET
   payment_total= invoice_total*0.5,
   payment_date= due_date
WHERE  client_id IN
           (SELECT client_id
            FROM clients
            WHERE state IN ('CA','NY'));

-- delete rows 删除行
DELETE FROM invoices
WHERE invoice_id=1;

DELETE FROM invoices
WHERE client_id=
             (SELECT client_id
              FROM clients
              WHERE name='Myworks' )

-- restore the database 恢复数据库 重新打开源文件 重置
